% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/FPCA.R
\name{FPCA}
\alias{FPCA}
\title{Functional Principal Component Analysis}
\usage{
FPCA(y, t, optns = list())
}
\arguments{
\item{y}{A list of \emph{n} vectors containing the observed values for each individual. Missing values specified by \code{NA}s are supported for dense case (\code{dataType='dense'}).}

\item{t}{A list of \emph{n} vectors containing the observation time points for each individual corresponding to y.}

\item{optns}{A list of options control parameters specified by \code{list(name=value)}. See `Details'.}
}
\value{
A list containing the following fields:
\item{sigma2}{Variance for measure error.}
\item{lambda}{A vector of length \emph{K} containing eigenvalues.}
\item{phi}{An nWorkGrid by \emph{K} matrix containing eigenfunctions, supported on workGrid.}
\item{xiEst}{A \emph{n} by \emph{K} matrix containing the FPC estimates.}
\item{xiVar}{A list of length \emph{n}, each entry containing the variance estimates for the FPC estimates.}
\item{obsGrid}{The (sorted) grid points where all observation points are pooled.}
\item{mu}{A vector of length nObsGrid containing the mean function estimate.}
\item{workGrid}{A vector of length nWorkGrid. The internal regular grid on which the eigen analysis is carried on.}
\item{smoothedCov}{A nWorkGrid by nWorkGrid matrix of the smoothed covariance surface.}
\item{fittedCov}{A nWorkGrid by nWorkGrid matrix of the fitted covariance surface, which is garanteed to be nonnegative definite.}
\item{optns}{A list of actually used options.}
\item{bwMu}{The selected (or user specified) bandwidth for smoothing the mean function.}
\item{bwCov}{The selected (or user specified) bandwidth for smoothing the covariance function.}
\item{rho}{A regularizer for the measurement error variance estimate.}
}
\description{
FPCA for dense or sparse functional data.
}
\details{
Available control options are
\describe{
\item{bwcov}{bandwidth value for covariance function; positive numeric - default: determine automatically based on 'bwcovGcv'}
\item{bwcovGcv}{bandwidth choice method for covariance function; 'GMeanAndGCV','CV','GCV - default: 'GMeanAndGCV'')}
\item{bwmu}{bandwidth choice for mean function is using CV or GCV; positive numeric - default: determine automatically based on 'bwmuGcv'}
\item{bwmuGcv}{bandwidth choice method for mean function; 'GMeanAndGCV','CV','GCV - default: 'GMeanAndGCV''}
\item{corrPlot}{make correlation plot; logical - default: FALSE}
\item{corrPlotType}{which type of correlation plot to show; 'Fitted', 'Raw', 'Smoothed' - default: 'Fitted'}
\item{dataType}{do we have sparse or dense functional data; 'Sparse', 'Dense', 'DenseWithMV', 'p>>n' - default:  determine automatically based on 'IsRegular'}
\item{designPlot}{make design plot; logical - default: FALSE}
\item{error}{assume measurement error in the dataset; logical - default: TRUE}
\item{FVEthreshold}{Fraction-of-Variance-Explained threshold used during the SVD of the fitted covar. function; numeric (0,1] - default: 0.9999}
\item{kernel}{smoothing kernel choice, common for mu and covariance; "rect", "gauss", "epan", "gausvar", "quar" - default: "epan" for dense data else "gauss"}
\item{methodCov}{ method to estimate covariance; 'PACE','RARE','CrossSectional' - automatically determined, user input ignored}
\item{methodMu}{ method to estimate mu; 'PACE','RARE','CrossSectional' - automatically determined, user input ignored }
\item{maxK}{maximum number of principal components to consider; positive integer - default: min(20, N-1), N:# of curves}
\item{method}{method to estimate the PC scores; 'CE', 'IN' - default: 'CE'}
\item{newdata}{new data points to estimate; numeric - default: NULL }
\item{ntest1}{number of curves used for CV when choosing bandwidth; [1,N] - default: min(30, N-1), N: # of curves}
\item{nRegGrid}{number of support points in each direction of covariance surface; numeric - default: 51}
\item{numBins}{number of bins to bin the data into; positive integer > 10, default: NULL}
\item{screePlot}{make scree plot; logical - default: FALSE}
\item{selectionMethod}{the method of choosing the number of principal components K; 'FVE','AIC','BIC': default 'FVE' - only 'FVE' avaiable now/ default 'FVE')}
\item{shrink}{apply shrinkage to estimates of random coefficients (dense data only); logical - default: FALSE}
\item{outPercent}{2-element vector in [0,1] indicating the outPercent data in the boundary - default (0,1)}
\item{rho}{truncation threshold for the iterative residual. 'cv': choose rho by leave-one-observation out cross-validation; 'no': use the iterative sigma2 estimate - default "cv".}
\item{rotationCut}{2-element vector in [0,1] indicating the percent of data truncated during sigma^2 estimation; default  (0.25, 0.75))}
\item{useBinnedData}{'FORCE' (Enforce the # of bins), 'AUTO' (Select the # of  bins automatically), 'OFF' (Do not bin) - default: 'AUTO'}
\item{useBins}{Not integrated yet: whether to bin the same observed time points when 2D smoothing; logical - default: FALSE}
\item{userCov}{user-defined smoothed covariance function; numerical matrix - default: NULL}
\item{userMu}{user-defined smoothed mean function; numerical vector - default: NULL}
\item{verbose}{display diagnostic messages; logical - default: FALSE}
}
}
\examples{
set.seed(1)
n <- 20
pts <- seq(0, 1, by=0.05)
sampWiener <- wiener(n, pts)
sampWiener <- sparsify(sampWiener, pts, 10)
res <- FPCA(sampWiener$yList, sampWiener$tList, list(dataType='Sparse', error=FALSE, kernel='epan', verbose=TRUE))
createCorrPlot(res, 'Fitted')
}

